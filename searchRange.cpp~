class Solution {
public:
    vector<int> searchRange(int arr[], int n, int target) {
        vector<int> result;
        result.push_back(-1);
        result.push_back(-1);
        
        int start=0;
        int end=n-1;
        
        int first=-1;
        int last=-1;
        while(start<end){
            int mid=start+(end-start)/2;
            if(arr[mid] < target){
                start=mid+1;
            }
            else {
                   if(arr[mid] > target){
                       end=mid-1;
                   }
                   else{
                       first=mid;
                       if(mid==0 || arr[mid-1]!=arr[mid])
                           break;
                       else {
                           end=mid-1;
                       }
                    
                       
                   }
            }
            
        }
        
        start=0; end=n-1;
        
        while(start<end){
            int mid=start+(end-start)/2;
            if(arr[mid] < target){
                start=mid+1;
            }
            else {
                   if(arr[mid] > target){
                       end==mid-1;
                   }
                   else{
                       last=mid;
                       if(mid==n-1 || arr[mid+1]!=arr[mid])
                           break;
                       else {
                           start=mid+1;
                       }
                    
                    
                       
                   }
            }
            
        }
        result[0]=fast;
        result[0]=last;
        
        return result;
        
    }
};
